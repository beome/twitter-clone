{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/beom/Documents/dev/twitter-clone/front/components/CommentForm.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Input } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addComment } from '../reducers/post';\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch(addComment(commentText));\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        row: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","PropTypes","Form","Button","Input","useInput","useDispatch","useSelector","addComment","CommentForm","post","dispatch","commentText","onChangeCommentText","setCommentText","addCommentDone","onSubmitComment","position","margin","right","bottom","propTypes","shape","id","number","User","object","content","string","createdAt","Comments","arrayOf","Images","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAAEM,WAAF,EAAeC,mBAAf,EAAoCC,cAApC,IAAuDT,QAAQ,CAAC,EAAD,CAArE;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,cAAJ,EAAoB;AAClBD,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACC,cAAD,CAJM,CAAT;AAMA,QAAMC,eAAe,GAAGjB,WAAW,CAAC,MAAM;AACxCY,IAAAA,QAAQ,CAACH,UAAU,CAACI,WAAD,CAAX,CAAR;AACD,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAGA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEI,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEN,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,GAAG,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEI,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SAAf;AAAgE,QAAA,IAAI,EAAC,SAArE;AAA+E,QAAA,QAAQ,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CArBD;;AAuBAX,WAAW,CAACY,SAAZ,GAAwB;AACtBX,EAAAA,IAAI,EAAET,SAAS,CAACqB,KAAV,CAAgB;AACpBC,IAAAA,EAAE,EAAEtB,SAAS,CAACuB,MADM;AAEpBC,IAAAA,IAAI,EAAExB,SAAS,CAACyB,MAFI;AAGpBC,IAAAA,OAAO,EAAE1B,SAAS,CAAC2B,MAHC;AAIpBC,IAAAA,SAAS,EAAE5B,SAAS,CAACyB,MAJD;AAKpBI,IAAAA,QAAQ,EAAE7B,SAAS,CAAC8B,OAAV,CAAkB9B,SAAS,CAACyB,MAA5B,CALU;AAMpBM,IAAAA,MAAM,EAAE/B,SAAS,CAAC8B,OAAV,CAAkB9B,SAAS,CAACyB,MAA5B;AANY,GAAhB,EAOHO;AARmB,CAAxB;AAWA,eAAexB,WAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Input } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addComment } from '../reducers/post';\n\nconst CommentForm = ({ post }) => {\n  const dispatch = useDispatch();\n  const [ commentText, onChangeCommentText, setCommentText ] = useInput('');\n\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n\n  const onSubmitComment = useCallback(() => {\n    dispatch(addComment(commentText));\n  }, [commentText]);\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: 'relative', margin: 0}}>\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} row={4} />\n        <Button style={{ position: 'absolute', right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\">삐약</Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nCommentForm.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired \n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}