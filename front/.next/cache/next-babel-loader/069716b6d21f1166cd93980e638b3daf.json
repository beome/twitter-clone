{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/beom/Documents/dev/twitter-clone/front/components/CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Input } from 'antd';\nimport useInput from '../hooks/useInput';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {}, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.Textarea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        row: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CommentForm, \"F9qUFwXU7+tqPB2FQmj+LdbLdrg=\", false, function () {\n  return [useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/components/CommentForm.js"],"names":["React","useCallback","PropTypes","Form","Button","Input","useInput","CommentForm","post","commentText","onChangeCommentText","onSubmitComment","propTypes","shape","id","number","User","object","content","string","createdAt","Comments","arrayOf","Images","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACaF,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,MACxBG,WADwB;AAAA,MACXC,mBADW;;AAEhC,MAAMC,eAAe,GAAGV,WAAW,CAAC,YAAM,CAEzC,CAFkC,EAEhC,CAACQ,WAAD,CAFgC,CAAnC;AAGA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEF,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,GAAG,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAbD;;GAAMH,W;UACyCD,Q;;;KADzCC,W;AAeNA,WAAW,CAACK,SAAZ,GAAwB;AACtBJ,EAAAA,IAAI,EAAEN,SAAS,CAACW,KAAV,CAAgB;AACpBC,IAAAA,EAAE,EAAEZ,SAAS,CAACa,MADM;AAEpBC,IAAAA,IAAI,EAAEd,SAAS,CAACe,MAFI;AAGpBC,IAAAA,OAAO,EAAEhB,SAAS,CAACiB,MAHC;AAIpBC,IAAAA,SAAS,EAAElB,SAAS,CAACe,MAJD;AAKpBI,IAAAA,QAAQ,EAAEnB,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACe,MAA5B,CALU;AAMpBM,IAAAA,MAAM,EAAErB,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACe,MAA5B;AANY,GAAhB,EAOHO;AARmB,CAAxB;AAWA,eAAejB,WAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Input } from 'antd';\nimport useInput from '../hooks/useInput';\n\nconst CommentForm = ({ post }) => {\n  const [ commentText, onChangeCommentText ] = useInput('');\n  const onSubmitComment = useCallback(() => {\n\n  }, [commentText]);\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item>\n        <Input.Textarea value={commentText} onChange={onChangeCommentText} row={4} />\n        <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nCommentForm.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired \n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}