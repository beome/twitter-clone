{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/beom/Documents/dev/twitter-clone/front/components/PostForm.js\";\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { addPost } from '../reducers/post';\nimport useInput from '../hooks/useInput';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePaths,\n    addPostLoding,\n    addPostDone\n  } = useSelector(state => state.post);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const imageInput = useRef();\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    const test = {\n      text,\n      me\n    };\n    console.log('test : ', test);\n    debugger;\n    dispatch(addPost({\n      text,\n      me\n    }));\n  }, [text]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    loading: addPostLoding,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        loading: addPostLoding,\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'http://localhost:3065/' + v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/components/PostForm.js"],"names":["React","useCallback","useRef","useEffect","useDispatch","useSelector","Form","Input","Button","addPost","useInput","PostForm","dispatch","imagePaths","addPostLoding","addPostDone","state","post","me","user","imageInput","text","onChangeText","setText","onSubmit","test","console","log","onClickImageUpload","current","click","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\n\nimport { addPost } from '../reducers/post';\nimport useInput from '../hooks/useInput';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const { imagePaths, addPostLoding, addPostDone } = useSelector((state) => state.post);\n  const { me } = useSelector((state) => state.user);\n  const imageInput = useRef();\n  const [ text, onChangeText, setText ] = useInput('');\n\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    const test = {text, me};\n    console.log('test : ',test);\n\n    debugger;\n    dispatch(addPost({text, me}));\n  }, [text]);\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  return (\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit} loading={addPostLoding}>\n      <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" />\n      <div>\n        <input type=\"file\" multiple hidden ref={imageInput} />\n        <Button onClick={onClickImageUpload} >이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" loading={addPostLoding}>짹짹</Button>\n      </div>\n      <div>\n        {imagePaths.map((v) => {\n          return (\n            <div key={v} style={{ display: 'inline-block' }}>\n              <img src={'http://localhost:3065/' + v} style={{ width: '200px' }} alt={v} />\n              <div>\n                <Button>제거</Button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </Form>\n  );\n }\n\n export default PostForm;"]},"metadata":{},"sourceType":"module"}