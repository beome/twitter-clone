{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/beom/Documents/dev/twitter-clone/front/components/FollowButton.js\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst FollowButton = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user);\n  const isFollowings = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id);\n  const onClickButton = useCallback(() => {\n    if (isFollowings) {\n      dispatch(unfollow({\n        postId: post.User.id,\n        nickname: post.User.nickname\n      }));\n    } else {\n      dispatch(follow({\n        postId: post.User.id,\n        nickname: post.User.nickname\n      }));\n    }\n  }, [isFollowings]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton,\n    children: isFollowings ? 언팔로우 : 팔로우\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/components/FollowButton.js"],"names":["React","useCallback","PropTypes","Button","useDispatch","useSelector","FollowButton","post","dispatch","me","followLoading","unfollowLoading","state","user","isFollowings","Followings","find","v","id","User","onClickButton","unfollow","postId","nickname","follow","언팔로우","팔로우","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACjC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA,EAAF;AAAMC,IAAAA,aAAN;AAAqBC,IAAAA;AAArB,MAAyCN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1D;AACA,QAAMC,YAAY,GAAGL,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEM,UAAJ,CAAeC,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA9C,CAArB;AAEA,QAAME,aAAa,GAAGnB,WAAW,CAAC,MAAK;AACrC,QAAIa,YAAJ,EAAkB;AAChBN,MAAAA,QAAQ,CAACa,QAAQ,CAAC;AAACC,QAAAA,MAAM,EAAEf,IAAI,CAACY,IAAL,CAAUD,EAAnB;AAAuBK,QAAAA,QAAQ,EAAEhB,IAAI,CAACY,IAAL,CAAUI;AAA3C,OAAD,CAAT,CAAR;AACD,KAFD,MAEO;AACLf,MAAAA,QAAQ,CAACgB,MAAM,CAAE;AAACF,QAAAA,MAAM,EAAEf,IAAI,CAACY,IAAL,CAAUD,EAAnB;AAAuBK,QAAAA,QAAQ,EAAEhB,IAAI,CAACY,IAAL,CAAUI;AAA3C,OAAF,CAAP,CAAR;AACD;AACF,GANgC,EAM9B,CAACT,YAAD,CAN8B,CAAjC;AAQA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,aAAa,IAAIC,eAAlC;AAAmD,IAAA,OAAO,EAAES,aAA5D;AAAA,cACGN,YAAY,GAAGW,IAAH,GAAUC;AADzB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;;AAoBApB,YAAY,CAACqB,SAAb,GAAyB;AACvBpB,EAAAA,IAAI,EAAEL,SAAS,CAAC0B,MAAV,CAAiBC;AADA,CAAzB;AAIA,eAAevB,YAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nconst FollowButton = ({ post }) => {\n  const dispatch = useDispatch();\n  const { me, followLoading, unfollowLoading } = useSelector((state) => state.user);\n  const isFollowings = me?.Followings.find((v) => v.id === post.User.id);\n\n  const onClickButton = useCallback(() =>{\n    if (isFollowings) {\n      dispatch(unfollow({postId: post.User.id, nickname: post.User.nickname}));\n    } else {\n      dispatch(follow(({postId: post.User.id, nickname: post.User.nickname})));\n    }\n  }, [isFollowings]);\n \n  return (\n    <Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\n      {isFollowings ? 언팔로우 : 팔로우}\n    </Button>\n  );\n}\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired,\n}\n\nexport default FollowButton;"]},"metadata":{},"sourceType":"module"}