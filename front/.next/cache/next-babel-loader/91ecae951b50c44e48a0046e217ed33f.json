{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport shortid from \"shortid\";\nimport produce from 'immer';\nconst initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  singnUpData: {},\n  loginData: {}\n};\nexport const dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: '박범진',\n  id: shortid.generate(),\n  Posts: [],\n  Followings: [{\n    nickname: 'asdf'\n  }, {\n    nickname: 'asdf'\n  }, {\n    nickname: 'asdf'\n  }, {\n    nickname: 'asdf'\n  }],\n  Followers: []\n});\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\nexport const signUpRequestAction = data => {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true, draft.me = dummyUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true, draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.sigUpLoading = true;\n        draft.sigUpDone = false;\n        draft.sigUpError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true, draft.me = null;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true, draft.me = null;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changNicknameLoading = false;\n        draft.changNicknameError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift(action.data);\n        break;\n\n      case REMOVE_POST_OF_ME:\n        {\n          draft.me.Posts = state.me.Posts.filter(v => v.id !== action.data.postId);\n          break;\n        }\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/reducers/user.js"],"names":["shortid","produce","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","singnUpData","loginData","dummyUser","data","nickname","id","generate","Posts","Followings","Followers","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","type","logoutRequestAction","signUpRequestAction","reducer","state","action","draft","error","sigUpLoading","sigUpDone","sigUpError","changNicknameLoading","changNicknameError","unshift","filter","v","postId"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\nimport produce from 'immer';\n\nconst initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  singnUpData: {},\n  loginData: {},\n}\n\nexport const dummyUser = (data) => ({\n  ...data,\n  nickname: '박범진',\n  id : shortid.generate(),\n  Posts: [],\n  Followings: [{nickname: 'asdf'},{nickname: 'asdf'},{nickname: 'asdf'},{nickname: 'asdf'}],\n  Followers: [],\n});\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME'; \nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME'; \n\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n}\n\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST,\n  };\n}\n\nexport const signUpRequestAction = (data) => {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n}\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true,\n        draft.me = dummyUser(action.data);\n        break;\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true,\n        draft.me = null;\n        break;\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n      case SIGN_UP_REQUEST:\n        draft.sigUpLoading = true;\n        draft.sigUpDone = false;\n        draft.sigUpError = null;\n        break;\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true,\n        draft.me = null;\n        break;\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true,\n        draft.me = null;\n        break;\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changNicknameLoading = false;\n        draft.changNicknameError = action.error;\n        break;\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift(action.data);\n        break;\n      case REMOVE_POST_OF_ME: {\n        draft.me.Posts = state.me.Posts.filter((v) => v.id !== action.data.postId);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}