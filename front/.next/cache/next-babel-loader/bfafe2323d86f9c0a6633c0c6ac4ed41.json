{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/beom/Documents/dev/twitter-clone/front/components/FollowButton.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nvar FollowButton = function FollowButton(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followLoading = _useSelector.followLoading,\n      unfollowLoading = _useSelector.unfollowLoading;\n\n  var isFollowings = me === null || me === void 0 ? void 0 : me.Followings.find(function (v) {\n    return v.id === post.User.id;\n  });\n  var onClickButton = useCallback(function () {\n    if (isFollowings) {\n      dispatch(unfollow({\n        postId: post.User.id,\n        nickname: post.User.nickname\n      }));\n    } else {\n      dispatch(follow({\n        postId: post.User.id,\n        nickname: post.User.nickname\n      }));\n    }\n  }, [isFollowings]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton,\n    children: isFollowings ? 언팔로우 : 팔로우\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FollowButton, \"oQRGZ4+MgpAjZ6p1zzrPk3lOofY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FollowButton;\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowButton\");","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/components/FollowButton.js"],"names":["React","useCallback","PropTypes","Button","useDispatch","useSelector","FollowButton","post","dispatch","state","user","me","followLoading","unfollowLoading","isFollowings","Followings","find","v","id","User","onClickButton","unfollow","postId","nickname","follow","언팔로우","팔로우","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACjC,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AADiC,qBAEcC,WAAW,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAFzB;AAAA,MAEzBC,EAFyB,gBAEzBA,EAFyB;AAAA,MAErBC,aAFqB,gBAErBA,aAFqB;AAAA,MAENC,eAFM,gBAENA,eAFM;;AAGjC,MAAMC,YAAY,GAAGH,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEI,UAAJ,CAAeC,IAAf,CAAoB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA1B;AAAA,GAApB,CAArB;AAEA,MAAME,aAAa,GAAGnB,WAAW,CAAC,YAAK;AACrC,QAAIa,YAAJ,EAAkB;AAChBN,MAAAA,QAAQ,CAACa,QAAQ,CAAC;AAACC,QAAAA,MAAM,EAAEf,IAAI,CAACY,IAAL,CAAUD,EAAnB;AAAuBK,QAAAA,QAAQ,EAAEhB,IAAI,CAACY,IAAL,CAAUI;AAA3C,OAAD,CAAT,CAAR;AACD,KAFD,MAEO;AACLf,MAAAA,QAAQ,CAACgB,MAAM,CAAE;AAACF,QAAAA,MAAM,EAAEf,IAAI,CAACY,IAAL,CAAUD,EAAnB;AAAuBK,QAAAA,QAAQ,EAAEhB,IAAI,CAACY,IAAL,CAAUI;AAA3C,OAAF,CAAP,CAAR;AACD;AACF,GANgC,EAM9B,CAACT,YAAD,CAN8B,CAAjC;AAQA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,aAAa,IAAIC,eAAlC;AAAmD,IAAA,OAAO,EAAEO,aAA5D;AAAA,cACGN,YAAY,GAAGW,IAAH,GAAUC;AADzB;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAlBD;;GAAMpB,Y;UACaF,W,EAC8BC,W;;;KAF3CC,Y;AAoBNA,YAAY,CAACqB,SAAb,GAAyB;AACvBpB,EAAAA,IAAI,EAAEL,SAAS,CAAC0B,MAAV,CAAiBC;AADA,CAAzB;AAIA,eAAevB,YAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nconst FollowButton = ({ post }) => {\n  const dispatch = useDispatch();\n  const { me, followLoading, unfollowLoading } = useSelector((state) => state.user);\n  const isFollowings = me?.Followings.find((v) => v.id === post.User.id);\n\n  const onClickButton = useCallback(() =>{\n    if (isFollowings) {\n      dispatch(unfollow({postId: post.User.id, nickname: post.User.nickname}));\n    } else {\n      dispatch(follow(({postId: post.User.id, nickname: post.User.nickname})));\n    }\n  }, [isFollowings]);\n \n  return (\n    <Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\n      {isFollowings ? 언팔로우 : 팔로우}\n    </Button>\n  );\n}\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired,\n}\n\nexport default FollowButton;"]},"metadata":{},"sourceType":"module"}