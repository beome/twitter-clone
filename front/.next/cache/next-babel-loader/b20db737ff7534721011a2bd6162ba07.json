{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE } from '../reducers/post';\n\nfunction addPostAPI() {\n  return axios.post('/api/addPost');\n}\n\nfunction* addPost() {\n  try {\n    // const result = yield call(addPostAPI); \n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/sagas/post.js"],"names":["all","call","delay","fork","put","takeLatest","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPostAPI","post","addPost","type","data","result","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,gBADF,EACoBC,gBADpB,EACsCC,gBADtC,QAEO,kBAFP;;AAIA,SAASC,UAAT,GAAsB;AACpB,SAAOJ,KAAK,CAACK,IAAN,CAAW,cAAX,CAAP;AACD;;AAED,UAAUC,OAAV,GAAoB;AAClB,MAAI;AACF;AACA,UAAMV,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEL,gBADE;AAERM,MAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOE,GAAP,EAAY;AACZ,UAAMZ,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEJ,gBADE;AAERK,MAAAA,IAAI,EAAEE,GAAG,CAACC,QAAJ,CAAaH;AAFX,KAAD,CAAT;AAKD;AACF;;AAED,UAAUI,YAAV,GAAyB;AACvB,QAAMb,UAAU,CAACE,gBAAD,EAAmBK,OAAnB,CAAhB;AACD;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CAAC,CACRG,IAAI,CAACe,YAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { \n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, \n} from '../reducers/post';\n\nfunction addPostAPI() {\n  return axios.post('/api/addPost');\n}\n\nfunction* addPost() {\n  try {\n    // const result = yield call(addPostAPI); \n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}