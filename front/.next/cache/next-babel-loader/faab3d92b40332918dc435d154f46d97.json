{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport shortid from \"shortid\";\nimport produce from 'immer';\nconst initialState = {\n  loadUserLoading: false,\n  loadUserDone: false,\n  loadUserError: null,\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  followLoading: false,\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  unfollowDone: false,\n  unfollowError: null,\n  me: null,\n  singnUpData: {},\n  loginData: {}\n};\nexport const dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: '박범진',\n  id: shortid.generate(),\n  Posts: [],\n  Followings: [],\n  Followers: []\n});\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\nexport const signUpRequestAction = data => {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\nexport const followRequestAction = data => {\n  return {\n    type: FOLLOW_REQUEST,\n    data: data\n  };\n};\nexport const unfollowRequestAction = data => {\n  return {\n    type: UNFOLLOW_REQUEST,\n    data: data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_USER_REQUEST:\n        draft.loadUserLoading = true;\n        draft.loadUserDone = false;\n        draft.loadUserError = null;\n        break;\n\n      case LOAD_USER_SUCCESS:\n        draft.loadUserLoading = false;\n        draft.loadUserDone = true;\n        draft.me = action.data;\n        break;\n\n      case LOAD_USER_FAILURE:\n        draft.loadUserLoading = false;\n        draft.loadUserError = action.error;\n        break;\n\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = action.data;\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true, draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.sigUpLoading = true;\n        draft.sigUpDone = false;\n        draft.sigUpError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true, draft.me = null;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true, draft.me = null;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followDone = false;\n        draft.followError = null;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true, draft.me.Followings.unshift(action.data);\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      case UNFOLLOW_REQUEST:\n        draft.unfollowLoading = true;\n        draft.unfollowDone = false;\n        draft.unfollowError = null;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        draft.unfollowLoading = false;\n        draft.unfollowDone = true, draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data.id);\n        break;\n\n      case UNFOLLOW_FAILURE:\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift(action.data);\n        break;\n\n      case REMOVE_POST_OF_ME:\n        {\n          draft.me.Posts = state.me.Posts.filter(v => v.id !== action.data.postId);\n          break;\n        }\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/reducers/user.js"],"names":["shortid","produce","initialState","loadUserLoading","loadUserDone","loadUserError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","me","singnUpData","loginData","dummyUser","data","nickname","id","generate","Posts","Followings","Followers","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","type","logoutRequestAction","signUpRequestAction","followRequestAction","unfollowRequestAction","reducer","state","action","draft","error","sigUpLoading","sigUpDone","sigUpError","unshift","filter","v","postId"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\nimport produce from 'immer';\n\nconst initialState = {\n  loadUserLoading: false,\n  loadUserDone: false,\n  loadUserError: null,\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  followLoading: false,\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  unfollowDone: false,\n  unfollowError: null,\n  me: null,\n  singnUpData: {},\n  loginData: {},\n}\n\nexport const dummyUser = (data) => ({\n  ...data,\n  nickname: '박범진',\n  id : shortid.generate(),\n  Posts: [],\n  Followings: [],\n  Followers: [],\n});\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\n\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\n\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME'; \nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME'; \n\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n}\n\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST,\n  };\n}\n\nexport const signUpRequestAction = (data) => {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n}\nexport const followRequestAction = (data) => {\n  return {\n    type: FOLLOW_REQUEST,\n    data: data\n  };\n}\nexport const unfollowRequestAction = (data) => {\n  return {\n    type: UNFOLLOW_REQUEST,\n    data: data\n  };\n}\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case LOAD_USER_REQUEST:\n        draft.loadUserLoading = true;\n        draft.loadUserDone = false;\n        draft.loadUserError = null;\n        break;\n      case LOAD_USER_SUCCESS:\n        draft.loadUserLoading = false;\n        draft.loadUserDone = true;\n        draft.me = action.data;\n        break;\n      case LOAD_USER_FAILURE:\n        draft.loadUserLoading = false;\n        draft.loadUserError = action.error;\n        break;\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = action.data;\n        break;\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true,\n        draft.me = null;\n        break;\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n      case SIGN_UP_REQUEST:\n        draft.sigUpLoading = true;\n        draft.sigUpDone = false;\n        draft.sigUpError = null;\n        break;\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true,\n        draft.me = null;\n        break;\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true,\n        draft.me = null;\n        break;\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followDone = false;\n        draft.followError = null;\n        break;\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true,\n        draft.me.Followings.unshift(action.data);\n        break;\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n      case UNFOLLOW_REQUEST:\n        draft.unfollowLoading = true;\n        draft.unfollowDone = false;\n        draft.unfollowError = null;\n        break;\n      case UNFOLLOW_SUCCESS:\n        draft.unfollowLoading = false;\n        draft.unfollowDone = true,\n        draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.id);\n        break;\n      case UNFOLLOW_FAILURE:\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift(action.data);\n        break;\n      case REMOVE_POST_OF_ME: {\n        draft.me.Posts = state.me.Posts.filter((v) => v.id !== action.data.postId);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}