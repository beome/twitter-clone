{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport reducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nvar configureStore = function configureStore() {\n  var middlewares = [];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/store/configureStore.js"],"names":["createWrapper","compose","createStore","applyMiddleware","reducer","composeWithDevTools","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,QAAQ,GAAG,QACbP,OAAO,CAACE,eAAe,MAAf,SAAmBI,WAAnB,CAAD,CADM,GAEbF,mBAAmB,CAACF,eAAe,MAAf,SAAmBI,WAAnB,CAAD,CAFvB;AAGA,MAAME,KAAK,GAAGP,WAAW,CAACE,OAAD,EAAUI,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CAPD;;AASA,IAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAAEK,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport reducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(applyMiddleware(...middlewares))\n  const store = createStore(reducer, enhancer);\n  return store;\n}\n\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === 'development' });\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}