{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, dummyUser, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/user';\naxios.defaults.baseURL = 'http://localhost:3065';\n\nfunction logInAPI(loginData) {\n  return axios.post('/user/login', loginData);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data, {\n      withCredentials: true\n    });\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logOutAPI, {}, {\n      withCredentials: true\n    });\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/user/signUp', signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI); \n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI); \n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow), fork(watchLoadUser)]);\n}","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","dummyUser","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","defaults","baseURL","logInAPI","loginData","post","logIn","action","result","data","withCredentials","type","err","error","response","logOutAPI","logOut","signUpAPI","signUpData","signUp","followAPI","follow","unfollowAPI","unfollow","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnfollow","watchLoadUser","loadUser","userSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { \n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, dummyUser,\n  FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\n  UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\n  LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE\n} from '../reducers/user';\n\naxios.defaults.baseURL = 'http://localhost:3065';\n\nfunction logInAPI(loginData) {\n  return axios.post('/user/login', loginData);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data, {\n      withCredentials: true,\n    }); \n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n\n    });\n  }\n}\n\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logOutAPI, {}, {\n      withCredentials: true,\n    }); \n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n      \n    });\n  }\n}\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/user/signUp', signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data); \n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n      \n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI); \n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n      \n    });\n  }\n}\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI); \n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n      \n    });\n  }\n}\n\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchSignUp),\n    fork(watchFollow),\n    fork(watchUnfollow),\n    fork(watchLoadUser),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}