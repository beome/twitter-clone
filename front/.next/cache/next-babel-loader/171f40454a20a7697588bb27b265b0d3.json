{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, dummyUser } from '../reducers/user';\n\nfunction logInAPI() {\n  return axios.post('/api/login');\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI); \n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      // data: result.data\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(LogOutAPI); \n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.post('/api/signUp');\n}\n\nfunction* signUp() {\n  try {\n    // const result = yield call(signUpAPI); \n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow() {\n  try {\n    // const result = yield call(followAPI); \n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow() {\n  try {\n    // const result = yield call(unfollowAPI); \n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","dummyUser","logInAPI","post","logIn","action","type","data","err","error","response","logOutAPI","logOut","signUpAPI","signUp","followAPI","follow","FOLLOW_SUCCESS","FOLLOW_FAILURE","unfollowAPI","unfollow","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","watchLogIn","watchLogOut","watchSignUp","watchFollow","FOLLOW_REQUEST","watchUnfollow","UNFOLLOW_REQUEST","userSaga"],"mappings":"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","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { \n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, dummyUser,\n} from '../reducers/user';\n\nfunction logInAPI() {\n  return axios.post('/api/login');\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI); \n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      // data: result.data\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n\n    });\n  }\n}\n\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(LogOutAPI); \n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n      \n    });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.post('/api/signUp');\n}\n\nfunction* signUp() {\n  try {\n    // const result = yield call(signUpAPI); \n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n      \n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow() {\n  try {\n    // const result = yield call(followAPI); \n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n      \n    });\n  }\n}\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow() {\n  try {\n    // const result = yield call(unfollowAPI); \n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n      \n    });\n  }\n}\n\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchSignUp),\n    fork(watchFollow),\n    fork(watchUnfollow),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}