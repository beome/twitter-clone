{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/beom/Documents/dev/twitter-clone/front/components/PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { Button, Card, Popover, List, Comment, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { removePost } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch(removePost({\n      postId: post.id\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, _this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 22\n      }, _this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"hrizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 27\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostCard, \"GeKnjcBfLaGglnQpiCphIUunMW4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.string,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/components/PostCard.js"],"names":["React","useCallback","useState","Button","Card","Popover","List","Comment","Avatar","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","PropTypes","useDispatch","useSelector","PostImages","CommentForm","PostCardContent","removePost","FollowButton","PostCard","post","dispatch","id","state","user","me","removePostLoading","liked","setLiked","onToggleLike","prev","commentFormOpened","setCommentFormOpened","onToggleComment","onRemovePost","postId","Images","User","nickname","content","Comments","length","item","propTypes","shape","string","object","createdAt","arrayOf","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,IAAhC,EAAsCC,OAAtC,EAA+CC,MAA/C,QAA6D,MAA7D;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,eAAzC,EAA0DC,gBAA1D,EAA4EC,YAA5E,QAAgG,mBAAhG;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7B,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,EAAE,GAAGT,WAAW,CAAC,UAACU,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AAF6B,qBAGCT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACH,IAAjB;AAAA,GAAD,CAHZ;AAAA,MAGrBM,iBAHqB,gBAGrBA,iBAHqB;;AAAA,kBAID3B,QAAQ,CAAC,KAAD,CAJP;AAAA,MAIrB4B,KAJqB;AAAA,MAIdC,QAJc;;AAK7B,MAAMC,YAAY,GAAG/B,WAAW,CAAC,YAAM;AACrC8B,IAAAA,QAAQ,CAAC,UAACE,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAAR;AACD,GAF+B,EAE7B,EAF6B,CAAhC;;AAL6B,mBAQuB/B,QAAQ,CAAC,KAAD,CAR/B;AAAA,MAQrBgC,iBARqB;AAAA,MAQFC,oBARE;;AAS7B,MAAMC,eAAe,GAAGnC,WAAW,CAAC,YAAM;AACxCkC,IAAAA,oBAAoB,CAAC,UAACF,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAApB;AACD,GAFkC,EAEhC,EAFgC,CAAnC;AAIA,MAAMI,YAAY,GAAGpC,WAAW,CAAC,YAAM;AACrCuB,IAAAA,QAAQ,CAACJ,UAAU,CAAC;AAACkB,MAAAA,MAAM,EAAEf,IAAI,CAACE;AAAd,KAAD,CAAX,CAAR;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,sBACE;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,KAAK,EAAEF,IAAI,CAACgB,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEhB,IAAI,CAACgB;AAAzB;AAAA;AAAA;AAAA;AAAA,eAD3B;AAEE,MAAA,OAAO,EAAE,cACP,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,eADO,EAEPT,KAAK,gBACD,QAAC,YAAD;AAAc,QAAA,YAAY,EAAC,SAA3B;AAAiD,QAAA,OAAO,EAAEE;AAA1D,SAAyC,OAAzC;AAAA;AAAA;AAAA;AAAA,eADC,gBAED,QAAC,aAAD;AAA2B,QAAA,OAAO,EAAEA;AAApC,SAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,eAJG,eAKP,QAAC,eAAD;AAA+B,QAAA,OAAO,EAAEI;AAAxC,SAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,eALO,eAMP,QAAC,OAAD;AAAoB,QAAA,OAAO,eACzB,QAAC,MAAD,CAAQ,KAAR;AAAA,oBACGX,EAAE,IAAIF,IAAI,CAACiB,IAAL,CAAUf,EAAV,KAAiBA,EAAvB,gBAEG;AAAA,oCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAEI,iBAA/B;AAAkD,cAAA,OAAO,EAAEQ,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF;AAAA,0BAFH,gBAOG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,iBADF;AAAA,+BAYE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAZF,SAAa,MAAb;AAAA;AAAA;AAAA;AAAA,eANO,CAFX;AAuBE,MAAA,KAAK,EAAEZ,EAAE,iBAAI,QAAC,YAAD;AAAe,QAAA,IAAI,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,eAvBf;AAAA,6BAyBE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASA,IAAI,CAACiB,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,iBADV;AAEE,QAAA,KAAK,EAAElB,IAAI,CAACiB,IAAL,CAAUC,QAFnB;AAGE,QAAA,WAAW,eAAE,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAElB,IAAI,CAACmB;AAAhC;AAAA;AAAA;AAAA;AAAA;AAHf;AAAA;AAAA;AAAA;AAAA;AAzBF;AAAA;AAAA;AAAA;AAAA,aADF,EAgCGR,iBAAiB,iBAChB;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEX;AAAnB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,IAAD;AACE,QAAA,MAAM,YAAKA,IAAI,CAACoB,QAAL,CAAcC,MAAnB,8BADR;AAEE,QAAA,UAAU,EAAC,WAFb;AAGE,QAAA,UAAU,EAAErB,IAAI,CAACoB,QAHnB;AAIE,QAAA,UAAU,EAAE,oBAACE,IAAD;AAAA,8BACV;AAAA,mCACE,QAAC,OAAD;AACE,cAAA,MAAM,EAAEA,IAAI,CAACJ,QADf;AAEE,cAAA,MAAM,eAAE,QAAC,MAAD;AAAA,0BAASI,IAAI,CAACL,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,uBAFV;AAGE,cAAA,OAAO,EAAEI,IAAI,CAACH;AAHhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADU;AAAA;AAJd;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAsDD,CAtED;;GAAMpB,Q;UACaP,W,EACNC,W,EACmBA,W;;;KAH1BM,Q;AAyENA,QAAQ,CAACwB,SAAT,GAAqB;AACnBvB,EAAAA,IAAI,EAAET,SAAS,CAACiC,KAAV,CAAgB;AACpBtB,IAAAA,EAAE,EAAEX,SAAS,CAACkC,MADM;AAEpBR,IAAAA,IAAI,EAAE1B,SAAS,CAACmC,MAFI;AAGpBP,IAAAA,OAAO,EAAE5B,SAAS,CAACkC,MAHC;AAIpBE,IAAAA,SAAS,EAAEpC,SAAS,CAACmC,MAJD;AAKpBN,IAAAA,QAAQ,EAAE7B,SAAS,CAACqC,OAAV,CAAkBrC,SAAS,CAACmC,MAA5B,CALU;AAMpBV,IAAAA,MAAM,EAAEzB,SAAS,CAACqC,OAAV,CAAkBrC,SAAS,CAACmC,MAA5B;AANY,GAAhB,EAOHG;AARgB,CAArB;AAWA,eAAe9B,QAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Button, Card, Popover, List, Comment, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { removePost } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nconst PostCard = ({ post }) => {\n  const dispatch = useDispatch();\n  const id = useSelector((state) => state.user.me?.id);\n  const { removePostLoading } = useSelector((state) => state.post);\n  const [ liked, setLiked ] = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n  const [ commentFormOpened, setCommentFormOpened ] = useState(false);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  const onRemovePost = useCallback(() => {\n    dispatch(removePost({postId: post.id}));\n  }, []);\n  return (\n    <div>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked \n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike}/>\n            : <HeartOutlined key=\"heart\" onClick={onToggleLike}/>,\n          <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,\n          <Popover key=\"more\" content={(\n            <Button.Group>\n              {id && post.User.id === id \n                ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\n                  </>\n                ) \n                : <Button>신고</Button>}\n            </Button.Group>\n          )}>\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        extra={id && <FollowButton  post={post} />}\n      >\n        <Card.Meta \n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={<PostCardContent postData={post.content} />}\n        />\n      </Card>\n      {commentFormOpened && (\n        <div>\n          <CommentForm post={post} />\n          <List \n            header={`${post.Comments.length}개의 댓글`}\n            itemLayout=\"hrizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment \n                  author={item.nickname}\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.string,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired \n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}