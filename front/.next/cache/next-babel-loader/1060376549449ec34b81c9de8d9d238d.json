{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport shortid from \"shortid\";\nvar initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  singnUpData: {},\n  loginData: {}\n};\nexport var dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: '박범진',\n    id: shortid.generate(),\n    Posts: [],\n    Followings: [{\n      nickname: 'asdf'\n    }, {\n      nickname: 'asdf'\n    }, {\n      nickname: 'asdf'\n    }, {\n      nickname: 'asdf'\n    }],\n    Followers: []\n  });\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport var CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport var CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\nexport var signUpRequestAction = function signUpRequestAction(data) {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInError: action.error\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: true\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpDone: true,\n        me: null\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpError: action.error\n      });\n\n    case CHANGE_NICKNAME_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: true\n      });\n\n    case CHANGE_NICKNAME_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameDone: true,\n        me: null\n      });\n\n    case CHANGE_NICKNAME_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameError: action.error\n      });\n\n    case ADD_POST_TO_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: [action.data].concat(_toConsumableArray(state.me.Posts))\n        })\n      });\n\n    case REMOVE_POST_OF_ME:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          me: _objectSpread(_objectSpread({}, state.me), {}, {\n            Posts: state.me.Posts.filter(function (v) {\n              return v.id !== action.data.post.id;\n            })\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/reducers/user.js"],"names":["shortid","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","singnUpData","loginData","dummyUser","data","nickname","id","generate","Posts","Followings","Followers","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","type","logoutRequestAction","signUpRequestAction","reducer","state","action","error","filter","v","post"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\n\nconst initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  singnUpData: {},\n  loginData: {},\n}\n\nexport const dummyUser = (data) => ({\n  ...data,\n  nickname: '박범진',\n  id : shortid.generate(),\n  Posts: [],\n  Followings: [{nickname: 'asdf'},{nickname: 'asdf'},{nickname: 'asdf'},{nickname: 'asdf'}],\n  Followers: [],\n});\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME'; \nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME'; \n\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n}\n\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST,\n  };\n}\n\nexport const signUpRequestAction = (data) => {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return {\n        ...state,\n        logInLoading: true,\n      };\n    case LOG_IN_SUCCESS:\n      return {\n        ...state,\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data),\n      };\n    case LOG_IN_FAILURE:\n      return {\n        ...state,\n        logInLoading: false,\n        logInError: action.error,\n      };\n    case LOG_OUT_REQUEST:\n      return {\n        ...state,\n        logOutLoading: true,\n      };\n    case LOG_OUT_SUCCESS:\n      return {\n        ...state,\n        logOutLoading: false,\n        logOutDone: true,\n        me: null,\n      };\n    case LOG_OUT_FAILURE:\n      return {\n        ...state,\n        logOutLoading: false,\n        logOutError: action.error\n      };\n    case SIGN_UP_REQUEST:\n      return {\n        ...state,\n        signUpLoading: true,\n      };\n    case SIGN_UP_SUCCESS:\n      return {\n        ...state,\n        signUpLoading: false,\n        signUpDone: true,\n        me: null,\n      };\n    case SIGN_UP_FAILURE:\n      return {\n        ...state,\n        signUpLoading: false,\n        signUpError: action.error\n      };\n    case CHANGE_NICKNAME_REQUEST:\n      return {\n        ...state,\n        changeNicknameLoading: true,\n      };\n    case CHANGE_NICKNAME_SUCCESS:\n      return {\n        ...state,\n        changeNicknameLoading: false,\n        changeNicknameDone: true,\n        me: null,\n      };\n    case CHANGE_NICKNAME_FAILURE:\n      return {\n        ...state,\n        changeNicknameLoading: false,\n        changeNicknameError: action.error\n      };\n    case ADD_POST_TO_ME:\n    return {\n      ...state,\n      me: {\n        ...state.me,\n        Posts: [action.data, ...state.me.Posts]\n      }\n    };\n    case REMOVE_POST_OF_ME: {\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          Posts: state.me.Posts.filter((v) => v.id !== action.data.post.id)\n        }\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}