{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  me: null,\n  singnUpData: {},\n  loginData: {}\n};\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: '박범진',\n  id: 1,\n  Posts: [],\n  Followings: [],\n  Followers: []\n});\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\nexport const signUpRequestAction = data => {\n  console.log('dddddd : ', data);\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log('action :', action.type);\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInError: action.error\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: true\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpDone: true,\n        me: null\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/beom/Documents/dev/twitter-clone/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","me","singnUpData","loginData","dummyUser","data","nickname","id","Posts","Followings","Followers","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginRequestAction","type","logoutRequestAction","signUpRequestAction","console","log","reducer","state","action","error"],"mappings":"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","sourcesContent":["const initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  me: null,\n  singnUpData: {},\n  loginData: {},\n}\n\nconst dummyUser = (data) => ({\n  ...data,\n  nickname: '박범진',\n  id : 1,\n  Posts: [],\n  Followings: [],\n  Followers: [],\n});\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n}\n\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST,\n  };\n}\n\nexport const signUpRequestAction = (data) => {\n  console.log('dddddd : ',data);\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n}\n\nconst reducer = (state = initialState, action) => {\n  console.log('action :',action.type);\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return {\n        ...state,\n        logInLoading: true,\n      };\n    case LOG_IN_SUCCESS:\n      return {\n        ...state,\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data),\n      };\n    case LOG_IN_FAILURE:\n      return {\n        ...state,\n        logInLoading: false,\n        logInError: action.error,\n      };\n    case LOG_OUT_REQUEST:\n      return {\n        ...state,\n        logOutLoading: true,\n      };\n    case LOG_OUT_SUCCESS:\n      return {\n        ...state,\n        logOutLoading: false,\n        logOutDone: true,\n        me: null,\n      };\n    case LOG_OUT_FAILURE:\n      return {\n        ...state,\n        logOutLoading: false,\n        logOutError: action.error\n      };\n    case SIGN_UP_REQUEST:\n      return {\n        ...state,\n        signUpLoading: true,\n      };\n    case SIGN_UP_SUCCESS:\n      return {\n        ...state,\n        signUpLoading: false,\n        signUpDone: true,\n        me: null,\n      };\n    case SIGN_UP_FAILURE:\n      return {\n        ...state,\n        signUpLoading: false,\n        signUpError: action.error\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}